#!/bin/bash
# (C) Copyright 2024 Hewlett Packard Enterprise Development LP
#
# This script will pack a GLM-modified Debian .ISO file
# and cloud-init packages into a GLM Debian .tar file.
# The GLM-modified Debian .ISO file is generated by calling
# hpe-iso-build.sh and passing in the regular Debian .ISO.
# The cloud-init packages are not present in the Debian .ISO
# so we will pull the cloud-init package and dependencies
# from the network using aptly.

# Usage:
#  hpe-image-build.sh -i <debian.iso> -o <hpe-customizied-debian.tar>

# command line options            | Description
# ------------------------------- | -----------
# -i <debian.iso>                 | Input a standard Debian .ISO file
# -o <hpe-customizied-debian.tar> | Output GLM Debian .tar file

set -exuo pipefail

UEFI_ORIG_CFG_FILE=""
INPUT_ISO_FILENAME=""
CUSTOM_TAR_FILENAME=""
# parse command line parameters
while getopts "i:o:" opt
do
    case $opt in
        i) INPUT_ISO_FILENAME=$OPTARG
            if [[ ! -f $INPUT_ISO_FILENAME ]]
            then
                echo "ERROR missing image file $INPUT_ISO_FILENAME"
                exit -1
            fi
            ;;
        o) CUSTOM_TAR_FILENAME=$OPTARG ;;
    esac
done

if [ -z "$INPUT_ISO_FILENAME" -o -z "$CUSTOM_TAR_FILENAME" ]; then
   echo "Usage: $0 -i <debian.iso> -o <hpe-customizied-debian.tar>"
   exit 1
fi

# generate the .ISO filename
OUTPUT_ISO_FILENAME=$(echo $CUSTOM_TAR_FILENAME | sed -e "s/\.tar/.iso/g")

# convert the Debian .ISO into the GLM version
./hpe-iso-build.sh -i $INPUT_ISO_FILENAME -o $OUTPUT_ISO_FILENAME

# check to make sure we have the required tools called within this script
for i in aptly
do
  which $i > /dev/null 2>&1
  if [ $? -ne 0 ]
  then
    echo "$i not found. Please install."
    exit -1
  fi
done

# Setup Debian 12 (aka bookworm) as the default OS.
# TODO: Make this code dynamically determine
# the real distro being used.
UBUNTU_REPO=http://us.archive.ubuntu.com/ubuntu/
DEBIAN_REPO=https://ftp.debian.org/debian/
REPO=$DEBIAN_REPO

# Debian 12 bookworm
# Debian 11 bullseye
# Ubuntu 22.04 jammy
# Ubuntu 20.04 focal
RELEASE=bookworm
#RELEASE=bullseye

# Add Debian Key (https://keyring.debian.org/)
gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyring.debian.org --recv-keys 0x2404C9546E145360

# Add the Debian Bookworm keys (https://ftp-master.debian.org/keys.html)
wget -O - https://ftp-master.debian.org/keys/archive-key-12.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
#wget -O - https://ftp-master.debian.org/keys/archive-key-11.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import

# add another key
gpg --no-default-keyring --keyring trustedkeys.gpg --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9 F8D2585B8783D481

# generate a Debian repo of cloud-init and dependencies
rm -rf .aptly
aptly mirror create -architectures=amd64 -filter="cloud-init|prometheus-node-exporter|systemd-resolved|ifenslave|lsscsi"  -filter-with-deps $RELEASE-cloud-init $REPO $RELEASE main
aptly mirror update $RELEASE-cloud-init
aptly snapshot create $RELEASE-cloud-init from mirror $RELEASE-cloud-init
aptly publish --skip-signing snapshot $RELEASE-cloud-init

# generate the tarball
cp $OUTPUT_ISO_FILENAME ~/.aptly
tar cvf $CUSTOM_TAR_FILENAME -C ~/.aptly/ $(basename $OUTPUT_ISO_FILENAME) public
